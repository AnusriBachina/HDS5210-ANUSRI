{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AnusriBachina/HDS5210-ANUSRI/blob/main/FINAL\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**HDS 5210-02 FINAL PROJECT**\n",
        "\n",
        "# **Pollution and Health Impacts Analysis**\n",
        "\n",
        "## Project Overview\n",
        "This project analyzes the relationship between air pollution levels and their impacts on public health across various countries. It uses data related to AQI (Air Quality Index) values and pollutants such as CO, Ozone, NO2, and PM2.5 to examine their effects on respiratory diseases, cardiovascular diseases, and mortality rates.\n",
        "\n",
        "## Datasets\n",
        "1. **Global Air Pollution Dataset (global_air_pollution_dataset.csv)**:\n",
        "   - This dataset contains air quality information for various cities and countries, including AQI values for pollutants like CO, Ozone, NO2, and PM2.5. It helps analyze the pollution levels across different regions.\n",
        "   -Link: https://www.kaggle.com/datasets/hasibalmuzdadid/global-air-pollution-dataset?resource=download\n",
        "   - Columns: `Country`, `City`, `AQI Value`, `CO AQI Value`, `Ozone AQI Value`, `NO2 AQI Value`, `PM2.5 AQI Value`.\n",
        "   **Country**: Represents the name of the country where the air quality data is collected.\n",
        "- **City**: Indicates the city within the country where the air quality measurements are taken.\n",
        "- **AQI Value**: The overall Air Quality Index (AQI) value, which reflects the level of air pollution based on various pollutants. Higher values indicate worse air quality.\n",
        "- **CO AQI Value**: The AQI value for carbon monoxide (CO), a harmful pollutant that can affect respiratory health.\n",
        "- **Ozone AQI Value**: The AQI value for ozone, which at ground level can cause respiratory problems and other health issues.\n",
        "- **NO2 AQI Value**: The AQI value for nitrogen dioxide (NO2), a pollutant that can cause respiratory issues and contribute to the formation of smog.\n",
        "- **PM2.5 AQI Value**: The AQI value for particulate matter (PM2.5), tiny particles in the air that can penetrate deep into the lungs and cause serious health problems.\n",
        "\n",
        "2. **Countries Data (countries_data.json)**:\n",
        "   - This dataset provides additional information about the health impacts of pollution, including data on diseases like respiratory and cardiovascular diseases, as well as mortality rates across countries.\n",
        "   - Fields: `Country`, `RespiratoryDiseases`, `CardiovascularDiseases`, `MortalityRate`, `Population`.\n",
        "\n",
        "GOOGLE DRIVE LINK OF FILES: https://drive.google.com/drive/folders/1RmGuE_OzYAW3k37s8-U1VB4SJ8FjyynG?usp=drive_link\n",
        "\n",
        "   ## Purpose of the Project\n",
        "The aim of this project is to analyze how air pollution affects public health and identify countries at greater risk due to high pollution levels. Through data aggregation and visualization, this project provides insights that can guide policymakers and public health organizations in developing strategies to reduce pollution and mitigate its health impacts."
      ],
      "metadata": {
        "id": "8yqIwYFEFlLp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#import\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "3kXLHwb6IYzR"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#loading datasets\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "#loading the global air pollution csv dataset.\n",
        "pollution_aqi_data = pd.read_csv('/content/drive/My Drive/global air pollution dataset.csv')\n",
        "#loading the countries data.\n",
        "pollution_health_data = pd.read_json('/content/drive/My Drive/countries_data.json')\n",
        "#Displaying the pollution aqi data.\n",
        "pollution_aqi_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 330
        },
        "id": "7tdJ27nTJTRD",
        "outputId": "cd03a6d5-7ff6-41be-d590-6a216095d810"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Country              City  AQI Value AQI Category  CO AQI Value  \\\n",
              "0  Russian Federation        Praskoveya         51     Moderate             1   \n",
              "1              Brazil  Presidente Dutra         41         Good             1   \n",
              "2               Italy   Priolo Gargallo         66     Moderate             1   \n",
              "3              Poland         Przasnysz         34         Good             1   \n",
              "4              France          Punaauia         22         Good             0   \n",
              "\n",
              "  CO AQI Category  Ozone AQI Value Ozone AQI Category  NO2 AQI Value  \\\n",
              "0            Good               36               Good              0   \n",
              "1            Good                5               Good              1   \n",
              "2            Good               39               Good              2   \n",
              "3            Good               34               Good              0   \n",
              "4            Good               22               Good              0   \n",
              "\n",
              "  NO2 AQI Category  PM2.5 AQI Value PM2.5 AQI Category  \n",
              "0             Good               51           Moderate  \n",
              "1             Good               41               Good  \n",
              "2             Good               66           Moderate  \n",
              "3             Good               20               Good  \n",
              "4             Good                6               Good  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c46f8562-62e4-4a34-95ff-540a664c3135\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>City</th>\n",
              "      <th>AQI Value</th>\n",
              "      <th>AQI Category</th>\n",
              "      <th>CO AQI Value</th>\n",
              "      <th>CO AQI Category</th>\n",
              "      <th>Ozone AQI Value</th>\n",
              "      <th>Ozone AQI Category</th>\n",
              "      <th>NO2 AQI Value</th>\n",
              "      <th>NO2 AQI Category</th>\n",
              "      <th>PM2.5 AQI Value</th>\n",
              "      <th>PM2.5 AQI Category</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Russian Federation</td>\n",
              "      <td>Praskoveya</td>\n",
              "      <td>51</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>36</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>51</td>\n",
              "      <td>Moderate</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Presidente Dutra</td>\n",
              "      <td>41</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>5</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>41</td>\n",
              "      <td>Good</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Italy</td>\n",
              "      <td>Priolo Gargallo</td>\n",
              "      <td>66</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>39</td>\n",
              "      <td>Good</td>\n",
              "      <td>2</td>\n",
              "      <td>Good</td>\n",
              "      <td>66</td>\n",
              "      <td>Moderate</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Poland</td>\n",
              "      <td>Przasnysz</td>\n",
              "      <td>34</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>34</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>20</td>\n",
              "      <td>Good</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>France</td>\n",
              "      <td>Punaauia</td>\n",
              "      <td>22</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>22</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>6</td>\n",
              "      <td>Good</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c46f8562-62e4-4a34-95ff-540a664c3135')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c46f8562-62e4-4a34-95ff-540a664c3135 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c46f8562-62e4-4a34-95ff-540a664c3135');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dff462e3-db0a-4c4b-8323-b6340d706326\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dff462e3-db0a-4c4b-8323-b6340d706326')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dff462e3-db0a-4c4b-8323-b6340d706326 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "pollution_aqi_data",
              "summary": "{\n  \"name\": \"pollution_aqi_data\",\n  \"rows\": 23463,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"Comoros\",\n          \"Turkmenistan\",\n          \"Honduras\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23462,\n        \"samples\": [\n          \"Fonte Boa\",\n          \"Vidin\",\n          \"Kunda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56,\n        \"min\": 6,\n        \"max\": 500,\n        \"num_unique_values\": 347,\n        \"samples\": [\n          250,\n          222,\n          348\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Moderate\",\n          \"Good\",\n          \"Hazardous\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 133,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          27,\n          13,\n          67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Good\",\n          \"Unhealthy for Sensitive Groups\",\n          \"Moderate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ozone AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 0,\n        \"max\": 235,\n        \"num_unique_values\": 213,\n        \"samples\": [\n          89,\n          189,\n          138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ozone AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Moderate\",\n          \"Very Unhealthy\",\n          \"Unhealthy for Sensitive Groups\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2 AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 91,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          0,\n          7,\n          44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2 AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Moderate\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5 AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54,\n        \"min\": 0,\n        \"max\": 500,\n        \"num_unique_values\": 383,\n        \"samples\": [\n          136,\n          239\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5 AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Moderate\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DATA EXPLORATION**"
      ],
      "metadata": {
        "id": "RoR__4BAJlAi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pollution_aqi_data.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c3oWrRfmJZxv",
        "outputId": "3ffaed44-7d5d-4e0b-898b-0e791245baea"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(23463, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pollution_aqi_data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4i16TcYlJrFx",
        "outputId": "663a9eb0-6079-42d4-c6cf-9e4117a7130c"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 23463 entries, 0 to 23462\n",
            "Data columns (total 12 columns):\n",
            " #   Column              Non-Null Count  Dtype \n",
            "---  ------              --------------  ----- \n",
            " 0   Country             23036 non-null  object\n",
            " 1   City                23462 non-null  object\n",
            " 2   AQI Value           23463 non-null  int64 \n",
            " 3   AQI Category        23463 non-null  object\n",
            " 4   CO AQI Value        23463 non-null  int64 \n",
            " 5   CO AQI Category     23463 non-null  object\n",
            " 6   Ozone AQI Value     23463 non-null  int64 \n",
            " 7   Ozone AQI Category  23463 non-null  object\n",
            " 8   NO2 AQI Value       23463 non-null  int64 \n",
            " 9   NO2 AQI Category    23463 non-null  object\n",
            " 10  PM2.5 AQI Value     23463 non-null  int64 \n",
            " 11  PM2.5 AQI Category  23463 non-null  object\n",
            "dtypes: int64(5), object(7)\n",
            "memory usage: 2.1+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DATA CLEANING**\n",
        "\n"
      ],
      "metadata": {
        "id": "z4h9zjyOJxKc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pollution_aqi_data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 460
        },
        "id": "6ogMlG1jJy3H",
        "outputId": "81fb3de3-e50b-4da9-87b3-ccfa8c116c5a"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country               427\n",
              "City                    1\n",
              "AQI Value               0\n",
              "AQI Category            0\n",
              "CO AQI Value            0\n",
              "CO AQI Category         0\n",
              "Ozone AQI Value         0\n",
              "Ozone AQI Category      0\n",
              "NO2 AQI Value           0\n",
              "NO2 AQI Category        0\n",
              "PM2.5 AQI Value         0\n",
              "PM2.5 AQI Category      0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <td>427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ozone AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ozone AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO2 AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO2 AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM2.5 AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM2.5 AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The Country column has the most missing values (427), while other columns such as AQI Value and AQI Category have no missing values."
      ],
      "metadata": {
        "id": "e9qnIN2VJ8Q6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**HANDLING MISSING VALUES**\n",
        "\n",
        "To address the missing values in the dataset, the rows with any missing values were removed using the `dropna()` method."
      ],
      "metadata": {
        "id": "iaJ6ORZvKIGZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pollution_aqi_data = pollution_aqi_data.dropna()\n",
        "pollution_aqi_data.isnull().sum()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 460
        },
        "id": "FuksqWV4KPzl",
        "outputId": "788a7297-020b-44c7-da00-50959e6f4a64"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country               0\n",
              "City                  0\n",
              "AQI Value             0\n",
              "AQI Category          0\n",
              "CO AQI Value          0\n",
              "CO AQI Category       0\n",
              "Ozone AQI Value       0\n",
              "Ozone AQI Category    0\n",
              "NO2 AQI Value         0\n",
              "NO2 AQI Category      0\n",
              "PM2.5 AQI Value       0\n",
              "PM2.5 AQI Category    0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ozone AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ozone AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO2 AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO2 AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM2.5 AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM2.5 AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**MERGING DATASETS**\n",
        "\n",
        "To combine the pollution and health data, the two datasets (`pollution_aqi_data` and `pollution_health_data`) were merged using an inner join based on the common column `Country`. This operation ensures that only the rows with matching countries in both datasets are kept."
      ],
      "metadata": {
        "id": "LPUkAB28KjLQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pollution_health_combined = pollution_aqi_data.merge(pollution_health_data,how='inner',on=['Country'])\n",
        "pollution_health_combined.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hoQZQJ2yKdwr",
        "outputId": "5f63d62c-22cd-4879-f7fb-fc59443924ca"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(23035, 18)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pollution_health_combined"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "EX4rbZliKrth",
        "outputId": "30d00e86-39fc-4f70-ed2b-d5b4e38a69ae"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        Country            City_x  AQI Value AQI Category  \\\n",
              "0            Russian Federation        Praskoveya         51     Moderate   \n",
              "1                        Brazil  Presidente Dutra         41         Good   \n",
              "2                         Italy   Priolo Gargallo         66     Moderate   \n",
              "3                        Poland         Przasnysz         34         Good   \n",
              "4                        France          Punaauia         22         Good   \n",
              "...                         ...               ...        ...          ...   \n",
              "23030                     India      Gursahaiganj        184    Unhealthy   \n",
              "23031                    France            Sceaux         50         Good   \n",
              "23032                     India          Mormugao         50         Good   \n",
              "23033  United States of America       Westerville         71     Moderate   \n",
              "23034                  Malaysia            Marang         70     Moderate   \n",
              "\n",
              "       CO AQI Value CO AQI Category  Ozone AQI Value Ozone AQI Category  \\\n",
              "0                 1            Good               36               Good   \n",
              "1                 1            Good                5               Good   \n",
              "2                 1            Good               39               Good   \n",
              "3                 1            Good               34               Good   \n",
              "4                 0            Good               22               Good   \n",
              "...             ...             ...              ...                ...   \n",
              "23030             3            Good              154          Unhealthy   \n",
              "23031             1            Good               20               Good   \n",
              "23032             1            Good               22               Good   \n",
              "23033             1            Good               44               Good   \n",
              "23034             1            Good               38               Good   \n",
              "\n",
              "       NO2 AQI Value NO2 AQI Category  PM2.5 AQI Value PM2.5 AQI Category  \\\n",
              "0                  0             Good               51           Moderate   \n",
              "1                  1             Good               41               Good   \n",
              "2                  2             Good               66           Moderate   \n",
              "3                  0             Good               20               Good   \n",
              "4                  0             Good                6               Good   \n",
              "...              ...              ...              ...                ...   \n",
              "23030              2             Good              184          Unhealthy   \n",
              "23031              5             Good               50               Good   \n",
              "23032              1             Good               50               Good   \n",
              "23033              2             Good               71           Moderate   \n",
              "23034              0             Good               70           Moderate   \n",
              "\n",
              "            City_y  Population  AQI  \\\n",
              "0      Sample City     1234567  150   \n",
              "1      Sample City     1234567  150   \n",
              "2      Sample City     1234567  150   \n",
              "3      Sample City     1234567  150   \n",
              "4      Sample City     1234567  150   \n",
              "...            ...         ...  ...   \n",
              "23030  Sample City     1234567  150   \n",
              "23031  Sample City     1234567  150   \n",
              "23032  Sample City     1234567  150   \n",
              "23033  Sample City     1234567  150   \n",
              "23034  Sample City     1234567  150   \n",
              "\n",
              "                                              Pollutants  \\\n",
              "0      {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "1      {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "2      {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "3      {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "4      {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "...                                                  ...   \n",
              "23030  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "23031  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "23032  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "23033  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "23034  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "\n",
              "                                           HealthImpacts       Region  \n",
              "0      {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "1      {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "2      {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "3      {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "4      {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "...                                                  ...          ...  \n",
              "23030  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "23031  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "23032  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "23033  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "23034  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name  \n",
              "\n",
              "[23035 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-76941dc4-0d98-4982-a9e4-7b7558fc27e5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>City_x</th>\n",
              "      <th>AQI Value</th>\n",
              "      <th>AQI Category</th>\n",
              "      <th>CO AQI Value</th>\n",
              "      <th>CO AQI Category</th>\n",
              "      <th>Ozone AQI Value</th>\n",
              "      <th>Ozone AQI Category</th>\n",
              "      <th>NO2 AQI Value</th>\n",
              "      <th>NO2 AQI Category</th>\n",
              "      <th>PM2.5 AQI Value</th>\n",
              "      <th>PM2.5 AQI Category</th>\n",
              "      <th>City_y</th>\n",
              "      <th>Population</th>\n",
              "      <th>AQI</th>\n",
              "      <th>Pollutants</th>\n",
              "      <th>HealthImpacts</th>\n",
              "      <th>Region</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Russian Federation</td>\n",
              "      <td>Praskoveya</td>\n",
              "      <td>51</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>36</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>51</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Presidente Dutra</td>\n",
              "      <td>41</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>5</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>41</td>\n",
              "      <td>Good</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Italy</td>\n",
              "      <td>Priolo Gargallo</td>\n",
              "      <td>66</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>39</td>\n",
              "      <td>Good</td>\n",
              "      <td>2</td>\n",
              "      <td>Good</td>\n",
              "      <td>66</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Poland</td>\n",
              "      <td>Przasnysz</td>\n",
              "      <td>34</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>34</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>20</td>\n",
              "      <td>Good</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>France</td>\n",
              "      <td>Punaauia</td>\n",
              "      <td>22</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>22</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>6</td>\n",
              "      <td>Good</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23030</th>\n",
              "      <td>India</td>\n",
              "      <td>Gursahaiganj</td>\n",
              "      <td>184</td>\n",
              "      <td>Unhealthy</td>\n",
              "      <td>3</td>\n",
              "      <td>Good</td>\n",
              "      <td>154</td>\n",
              "      <td>Unhealthy</td>\n",
              "      <td>2</td>\n",
              "      <td>Good</td>\n",
              "      <td>184</td>\n",
              "      <td>Unhealthy</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23031</th>\n",
              "      <td>France</td>\n",
              "      <td>Sceaux</td>\n",
              "      <td>50</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>20</td>\n",
              "      <td>Good</td>\n",
              "      <td>5</td>\n",
              "      <td>Good</td>\n",
              "      <td>50</td>\n",
              "      <td>Good</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23032</th>\n",
              "      <td>India</td>\n",
              "      <td>Mormugao</td>\n",
              "      <td>50</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>22</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>50</td>\n",
              "      <td>Good</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23033</th>\n",
              "      <td>United States of America</td>\n",
              "      <td>Westerville</td>\n",
              "      <td>71</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>44</td>\n",
              "      <td>Good</td>\n",
              "      <td>2</td>\n",
              "      <td>Good</td>\n",
              "      <td>71</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23034</th>\n",
              "      <td>Malaysia</td>\n",
              "      <td>Marang</td>\n",
              "      <td>70</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>38</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>70</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>23035 rows × 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76941dc4-0d98-4982-a9e4-7b7558fc27e5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-76941dc4-0d98-4982-a9e4-7b7558fc27e5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-76941dc4-0d98-4982-a9e4-7b7558fc27e5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cba9a9ea-6cd0-4ac2-9b35-cda47b786c5c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cba9a9ea-6cd0-4ac2-9b35-cda47b786c5c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cba9a9ea-6cd0-4ac2-9b35-cda47b786c5c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_c8386231-1f68-439a-b729-ae18c73c043f\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('pollution_health_combined')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_c8386231-1f68-439a-b729-ae18c73c043f button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('pollution_health_combined');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "pollution_health_combined",
              "summary": "{\n  \"name\": \"pollution_health_combined\",\n  \"rows\": 23035,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"Comoros\",\n          \"Turkmenistan\",\n          \"Honduras\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City_x\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23035,\n        \"samples\": [\n          \"Palasa\",\n          \"Sadri\",\n          \"Alkmaar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56,\n        \"min\": 6,\n        \"max\": 500,\n        \"num_unique_values\": 347,\n        \"samples\": [\n          250,\n          222,\n          348\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Moderate\",\n          \"Good\",\n          \"Hazardous\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 133,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          27,\n          13,\n          67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Good\",\n          \"Unhealthy for Sensitive Groups\",\n          \"Moderate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ozone AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 0,\n        \"max\": 235,\n        \"num_unique_values\": 213,\n        \"samples\": [\n          89,\n          195,\n          138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ozone AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Moderate\",\n          \"Very Unhealthy\",\n          \"Unhealthy for Sensitive Groups\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2 AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 91,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          0,\n          7,\n          44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2 AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Moderate\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5 AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 55,\n        \"min\": 0,\n        \"max\": 500,\n        \"num_unique_values\": 383,\n        \"samples\": [\n          136,\n          239\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5 AQI Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Moderate\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City_y\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Sample City\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1234567,\n        \"max\": 1234567,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1234567\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AQI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 150,\n        \"max\": 150,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          150\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pollutants\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HealthImpacts\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Region Name\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**CHECKING FOR NULL VALUES**\n",
        "\n",
        "After merging the datasets, I checked for any null values in the `pollution_health_combined` dataset. Since no null values were found, I confirmed that the merged dataset is complete and ready for further analysis."
      ],
      "metadata": {
        "id": "JPvthEdrK1HG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pollution_health_combined.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 648
        },
        "id": "Y78P8ERkKwlw",
        "outputId": "7f22fede-d97d-4675-92b5-3f93b49bbf8f"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country               0\n",
              "City_x                0\n",
              "AQI Value             0\n",
              "AQI Category          0\n",
              "CO AQI Value          0\n",
              "CO AQI Category       0\n",
              "Ozone AQI Value       0\n",
              "Ozone AQI Category    0\n",
              "NO2 AQI Value         0\n",
              "NO2 AQI Category      0\n",
              "PM2.5 AQI Value       0\n",
              "PM2.5 AQI Category    0\n",
              "City_y                0\n",
              "Population            0\n",
              "AQI                   0\n",
              "Pollutants            0\n",
              "HealthImpacts         0\n",
              "Region                0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City_x</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ozone AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ozone AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO2 AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO2 AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM2.5 AQI Value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM2.5 AQI Category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City_y</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Population</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AQI</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Pollutants</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>HealthImpacts</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Region</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**AGGREGATING THE DATA**\n",
        "\n",
        "To gain more insights into the data, I have performed aggregation operations to calculate the average AQI and pollutants by country, as well as the total health impacts by country. This allows  to analyze the overall pollution levels and health implications across different regions.\n",
        "\n",
        "1. **Aggregating AQI and Pollutants by Country**\n",
        "I aggregated the data by calculating the mean values of various pollutants and AQI values for each country. This gives an overview of the average pollution levels in different regions."
      ],
      "metadata": {
        "id": "nenQwte4LCIB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Aggregating AQI and pollutants by country (average values)\n",
        "country_aggregates = pollution_health_combined.groupby('Country').agg({\n",
        "    'AQI Value': 'mean',\n",
        "    'CO AQI Value': 'mean',\n",
        "    'Ozone AQI Value': 'mean',\n",
        "    'NO2 AQI Value': 'mean',\n",
        "    'PM2.5 AQI Value': 'mean',\n",
        "    'Population': 'sum',  # Sum population for each country\n",
        "}).reset_index()\n",
        "\n",
        "country_aggregates # Displaying the aggregated data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "u7-hpdjpK9Bj",
        "outputId": "13f7eaa1-00cd-444c-f044-b62ac4a553e5"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                Country   AQI Value  CO AQI Value  \\\n",
              "0                           Afghanistan   95.959184      0.591837   \n",
              "1                               Albania   68.250000      1.000000   \n",
              "2                               Algeria   88.166667      1.916667   \n",
              "3                               Andorra   29.333333      0.666667   \n",
              "4                                Angola   83.925926      3.148148   \n",
              "..                                  ...         ...           ...   \n",
              "170  Venezuela (Bolivarian Republic of)   77.722222      1.277778   \n",
              "171                            Viet Nam   87.050000      2.366667   \n",
              "172                               Yemen  144.571429      1.285714   \n",
              "173                              Zambia   40.666667      0.690476   \n",
              "174                            Zimbabwe   43.740741      1.296296   \n",
              "\n",
              "     Ozone AQI Value  NO2 AQI Value  PM2.5 AQI Value  Population  \n",
              "0          40.183673       0.020408        95.918367    60493783  \n",
              "1          42.062500       0.718750        68.093750    39506144  \n",
              "2          47.166667       9.333333        80.250000    14814804  \n",
              "3          29.333333       0.000000        22.000000     3703701  \n",
              "4          22.703704       1.888889        81.925926    33333309  \n",
              "..               ...            ...              ...         ...  \n",
              "170        17.522222       3.866667        77.722222   111111030  \n",
              "171        46.233333       2.633333        82.483333    74074020  \n",
              "172        55.428571       0.714286       144.571429     8641969  \n",
              "173        20.190476       0.095238        39.952381    51851814  \n",
              "174        18.074074       0.444444        42.740741    33333309  \n",
              "\n",
              "[175 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-50ebf499-bda4-4bde-a24a-15d92bce0b4f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>AQI Value</th>\n",
              "      <th>CO AQI Value</th>\n",
              "      <th>Ozone AQI Value</th>\n",
              "      <th>NO2 AQI Value</th>\n",
              "      <th>PM2.5 AQI Value</th>\n",
              "      <th>Population</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>95.959184</td>\n",
              "      <td>0.591837</td>\n",
              "      <td>40.183673</td>\n",
              "      <td>0.020408</td>\n",
              "      <td>95.918367</td>\n",
              "      <td>60493783</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>68.250000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>42.062500</td>\n",
              "      <td>0.718750</td>\n",
              "      <td>68.093750</td>\n",
              "      <td>39506144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>88.166667</td>\n",
              "      <td>1.916667</td>\n",
              "      <td>47.166667</td>\n",
              "      <td>9.333333</td>\n",
              "      <td>80.250000</td>\n",
              "      <td>14814804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andorra</td>\n",
              "      <td>29.333333</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>29.333333</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>3703701</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Angola</td>\n",
              "      <td>83.925926</td>\n",
              "      <td>3.148148</td>\n",
              "      <td>22.703704</td>\n",
              "      <td>1.888889</td>\n",
              "      <td>81.925926</td>\n",
              "      <td>33333309</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>Venezuela (Bolivarian Republic of)</td>\n",
              "      <td>77.722222</td>\n",
              "      <td>1.277778</td>\n",
              "      <td>17.522222</td>\n",
              "      <td>3.866667</td>\n",
              "      <td>77.722222</td>\n",
              "      <td>111111030</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>Viet Nam</td>\n",
              "      <td>87.050000</td>\n",
              "      <td>2.366667</td>\n",
              "      <td>46.233333</td>\n",
              "      <td>2.633333</td>\n",
              "      <td>82.483333</td>\n",
              "      <td>74074020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>Yemen</td>\n",
              "      <td>144.571429</td>\n",
              "      <td>1.285714</td>\n",
              "      <td>55.428571</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>144.571429</td>\n",
              "      <td>8641969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>Zambia</td>\n",
              "      <td>40.666667</td>\n",
              "      <td>0.690476</td>\n",
              "      <td>20.190476</td>\n",
              "      <td>0.095238</td>\n",
              "      <td>39.952381</td>\n",
              "      <td>51851814</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>43.740741</td>\n",
              "      <td>1.296296</td>\n",
              "      <td>18.074074</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>42.740741</td>\n",
              "      <td>33333309</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>175 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50ebf499-bda4-4bde-a24a-15d92bce0b4f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-50ebf499-bda4-4bde-a24a-15d92bce0b4f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-50ebf499-bda4-4bde-a24a-15d92bce0b4f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-072a70a0-4ec6-4308-8708-08555e9f6809\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-072a70a0-4ec6-4308-8708-08555e9f6809')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-072a70a0-4ec6-4308-8708-08555e9f6809 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_827db3d9-1bc8-4487-8102-8f7bbe873ae3\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('country_aggregates')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_827db3d9-1bc8-4487-8102-8f7bbe873ae3 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('country_aggregates');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "country_aggregates",
              "summary": "{\n  \"name\": \"country_aggregates\",\n  \"rows\": 175,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"Togo\",\n          \"South Sudan\",\n          \"Monaco\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44.57780515325534,\n        \"min\": 16.0,\n        \"max\": 421.0,\n        \"num_unique_values\": 172,\n        \"samples\": [\n          51.72364672364672,\n          70.875,\n          53.58130081300813\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.1430534949213125,\n        \"min\": 0.0,\n        \"max\": 27.0,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          0.8064516129032258,\n          0.7109375,\n          3.1481481481481484\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ozone AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.975438200014615,\n        \"min\": 0.0,\n        \"max\": 159.66666666666666,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          10.416666666666666,\n          12.0,\n          29.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2 AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.092721738609101,\n        \"min\": 0.0,\n        \"max\": 91.0,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          2.2708333333333335,\n          1.1112006446414182,\n          3.23943661971831\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5 AQI Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45.20954923000182,\n        \"min\": 6.0,\n        \"max\": 415.0,\n        \"num_unique_values\": 173,\n        \"samples\": [\n          35.9875,\n          53.28358208955224,\n          43.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 439296462,\n        \"min\": 1234567,\n        \"max\": 3545676424,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          725925396,\n          11111103,\n          3545676424\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**EXTRACTING AND AGGREGATING HEALTH IMPACTS**\n",
        "\n",
        "I extracted relevant health data from the 'HealthImpacts' column in the dataset, which contains nested information. This step allowed  to isolate specific health impacts such as Respiratory Diseases, Cardiovascular Diseases, and Mortality Rate for each country.\n",
        "\n",
        "### 1. **Extracting Health Impacts Data**\n",
        "I used the `apply()` function to extract the data for Respiratory Diseases, Cardiovascular Diseases, and Mortality Rate. If a particular health impact is missing, I set the value to 0 to ensure no missing values.\n",
        "These aggregated health impact values (RespiratoryDiseases, CardiovascularDiseases, and MortalityRate) are used for:\n",
        "\n",
        "Further analysis to explore the correlation between pollution levels and health impacts across countries.\n",
        "Visualizations to depict the relationship between pollution and health outcomes, helping to identify countries with severe health risks due to pollution.\n"
      ],
      "metadata": {
        "id": "lZPK6y5cLkmE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Extracting the relevant fields from the 'HealthImpacts' column\n",
        "pollution_health_combined['RespiratoryDiseases'] = pollution_health_combined['HealthImpacts'].apply(lambda x: x.get('RespiratoryDiseases', 0))\n",
        "pollution_health_combined['CardiovascularDiseases'] = pollution_health_combined['HealthImpacts'].apply(lambda x: x.get('CardiovascularDiseases', 0))\n",
        "pollution_health_combined['MortalityRate'] = pollution_health_combined['HealthImpacts'].apply(lambda x: x.get('MortalityRate', 0))\n",
        "\n",
        "# Now aggregating the health impacts by Country\n",
        "country_health_aggregates = pollution_health_combined.groupby('Country').agg({\n",
        "    'RespiratoryDiseases': 'sum',\n",
        "    'CardiovascularDiseases': 'sum',\n",
        "    'MortalityRate': 'mean',\n",
        "}).reset_index()\n",
        "\n",
        "# Displaying the aggregated health impacts data.\n",
        "country_health_aggregates.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "zVvc4yoCLctx",
        "outputId": "b98e9aa8-2191-45f5-aa8c-0dbabb8cd538"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Country  RespiratoryDiseases  CardiovascularDiseases  MortalityRate\n",
              "0  Afghanistan                24500                   14700            1.5\n",
              "1      Albania                16000                    9600            1.5\n",
              "2      Algeria                 6000                    3600            1.5\n",
              "3      Andorra                 1500                     900            1.5\n",
              "4       Angola                13500                    8100            1.5"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a97f2435-d071-48ef-834b-4d8a5f9e15b7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>RespiratoryDiseases</th>\n",
              "      <th>CardiovascularDiseases</th>\n",
              "      <th>MortalityRate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>24500</td>\n",
              "      <td>14700</td>\n",
              "      <td>1.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>16000</td>\n",
              "      <td>9600</td>\n",
              "      <td>1.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>6000</td>\n",
              "      <td>3600</td>\n",
              "      <td>1.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andorra</td>\n",
              "      <td>1500</td>\n",
              "      <td>900</td>\n",
              "      <td>1.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Angola</td>\n",
              "      <td>13500</td>\n",
              "      <td>8100</td>\n",
              "      <td>1.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a97f2435-d071-48ef-834b-4d8a5f9e15b7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a97f2435-d071-48ef-834b-4d8a5f9e15b7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a97f2435-d071-48ef-834b-4d8a5f9e15b7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9ae2ecb6-e28c-4e2a-8ed8-9cfffaa2395f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ae2ecb6-e28c-4e2a-8ed8-9cfffaa2395f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9ae2ecb6-e28c-4e2a-8ed8-9cfffaa2395f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "country_health_aggregates",
              "summary": "{\n  \"name\": \"country_health_aggregates\",\n  \"rows\": 175,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"Togo\",\n          \"South Sudan\",\n          \"Monaco\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RespiratoryDiseases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177915,\n        \"min\": 500,\n        \"max\": 1436000,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          294000,\n          4500,\n          1436000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CardiovascularDiseases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106749,\n        \"min\": 300,\n        \"max\": 861600,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          176400,\n          2700,\n          861600\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MortalityRate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.5,\n        \"max\": 1.5,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**MERGING POLLUTION AND HEALTH METRICS AT THE COUNTRY LEVEL**\n",
        "\n",
        "To gain deeper insights into the relationship between air quality and health impacts, I merged the aggregated data for pollution metrics and health metrics at the **country level**."
      ],
      "metadata": {
        "id": "zvxiIdy3L3or"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Merging pollution metrics with health impact metrics by Country\n",
        "merged_country_data = country_aggregates.merge(\n",
        "    country_health_aggregates, on='Country', how='inner'\n",
        ")\n",
        "\n",
        "# Displaying the merged data to verify\n",
        "merged_country_data.head()\n",
        "\n",
        "# Visualization AQI Value vs. Respiratory Diseases (Scatter Plot by Country)\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.scatterplot(\n",
        "    x='AQI Value',\n",
        "    y='RespiratoryDiseases',\n",
        "    data=merged_country_data,\n",
        "    size='Population',\n",
        "    hue='MortalityRate',\n",
        "    palette='coolwarm',\n",
        "    sizes=(50, 500),\n",
        "    legend='brief'\n",
        ")\n",
        "\n",
        "# Adding plot details\n",
        "plt.title('AQI Value vs Respiratory Diseases (By Country)', fontsize=16)\n",
        "plt.xlabel('Average AQI Value', fontsize=14)\n",
        "plt.ylabel('Total Respiratory Diseases', fontsize=14)\n",
        "plt.legend(title='Mortality Rate (Color) / Population (Size)', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "KldX1lGaL0MG",
        "outputId": "e467617e-fa54-4a1c-96fa-faa22590dafa"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DATA PREPROCESSING AND TRANSFORMATION**\n",
        "\n",
        "In this step, several data preprocessing tasks were performed to prepare the dataset for further analysis and visualizations. The tasks include extracting relevant health data, creating new categories, and normalizing AQI values. Below is an explanation of each transformation."
      ],
      "metadata": {
        "id": "4ukTj3EyMSet"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "# Extracting RespiratoryDiseases from HealthImpacts\n",
        "pollution_health_combined['RespiratoryDiseases'] = pollution_health_combined['HealthImpacts'].apply(lambda x: x.get('RespiratoryDiseases', 0))\n",
        "# Extracting CardiovascularDiseases from HealthImpacts\n",
        "pollution_health_combined['CardiovascularDiseases'] = pollution_health_combined['HealthImpacts'].apply(lambda x: x.get('CardiovascularDiseases', 0))\n",
        "# Extracting MortalityRate from HealthImpacts\n",
        "pollution_health_combined['MortalityRate'] = pollution_health_combined['HealthImpacts'].apply(lambda x: x.get('MortalityRate', 0))\n",
        "# Createing AQI Category based on AQI Value\n",
        "pollution_health_combined['AQI Category'] = pollution_health_combined['AQI Value'].apply(lambda x: 'Good' if x <= 50 else ('Moderate' if x <= 100 else 'Unhealthy'))\n",
        "# Normalizing  AQI values using MinMaxScaler\n",
        "scaler = MinMaxScaler()\n",
        "pollution_health_combined['Normalized AQI'] = scaler.fit_transform(pollution_health_combined[['AQI Value']])\n",
        "\n",
        "# Showing the first few rows to verify the transformations\n",
        "pollution_health_combined.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 637
        },
        "id": "TatBfLIGMb8M",
        "outputId": "33696cd4-3490-441c-db67-4369527801a8"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Country            City_x  AQI Value AQI Category  CO AQI Value  \\\n",
              "0  Russian Federation        Praskoveya         51     Moderate             1   \n",
              "1              Brazil  Presidente Dutra         41         Good             1   \n",
              "2               Italy   Priolo Gargallo         66     Moderate             1   \n",
              "3              Poland         Przasnysz         34         Good             1   \n",
              "4              France          Punaauia         22         Good             0   \n",
              "\n",
              "  CO AQI Category  Ozone AQI Value Ozone AQI Category  NO2 AQI Value  \\\n",
              "0            Good               36               Good              0   \n",
              "1            Good                5               Good              1   \n",
              "2            Good               39               Good              2   \n",
              "3            Good               34               Good              0   \n",
              "4            Good               22               Good              0   \n",
              "\n",
              "  NO2 AQI Category  ...       City_y Population  AQI  \\\n",
              "0             Good  ...  Sample City    1234567  150   \n",
              "1             Good  ...  Sample City    1234567  150   \n",
              "2             Good  ...  Sample City    1234567  150   \n",
              "3             Good  ...  Sample City    1234567  150   \n",
              "4             Good  ...  Sample City    1234567  150   \n",
              "\n",
              "                                          Pollutants  \\\n",
              "0  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "1  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "2  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "3  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "4  {'PM2.5': {'Value': 120, 'Category': 'Unhealth...   \n",
              "\n",
              "                                       HealthImpacts       Region  \\\n",
              "0  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name   \n",
              "1  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name   \n",
              "2  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name   \n",
              "3  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name   \n",
              "4  {'RespiratoryDiseases': 500, 'CardiovascularDi...  Region Name   \n",
              "\n",
              "  RespiratoryDiseases CardiovascularDiseases  MortalityRate  Normalized AQI  \n",
              "0                 500                    300            1.5        0.091093  \n",
              "1                 500                    300            1.5        0.070850  \n",
              "2                 500                    300            1.5        0.121457  \n",
              "3                 500                    300            1.5        0.056680  \n",
              "4                 500                    300            1.5        0.032389  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-abfa8788-6ec2-4aa5-a11c-67e4cdc90075\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>City_x</th>\n",
              "      <th>AQI Value</th>\n",
              "      <th>AQI Category</th>\n",
              "      <th>CO AQI Value</th>\n",
              "      <th>CO AQI Category</th>\n",
              "      <th>Ozone AQI Value</th>\n",
              "      <th>Ozone AQI Category</th>\n",
              "      <th>NO2 AQI Value</th>\n",
              "      <th>NO2 AQI Category</th>\n",
              "      <th>...</th>\n",
              "      <th>City_y</th>\n",
              "      <th>Population</th>\n",
              "      <th>AQI</th>\n",
              "      <th>Pollutants</th>\n",
              "      <th>HealthImpacts</th>\n",
              "      <th>Region</th>\n",
              "      <th>RespiratoryDiseases</th>\n",
              "      <th>CardiovascularDiseases</th>\n",
              "      <th>MortalityRate</th>\n",
              "      <th>Normalized AQI</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Russian Federation</td>\n",
              "      <td>Praskoveya</td>\n",
              "      <td>51</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>36</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>...</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "      <td>500</td>\n",
              "      <td>300</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.091093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Presidente Dutra</td>\n",
              "      <td>41</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>5</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>...</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "      <td>500</td>\n",
              "      <td>300</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.070850</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Italy</td>\n",
              "      <td>Priolo Gargallo</td>\n",
              "      <td>66</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>39</td>\n",
              "      <td>Good</td>\n",
              "      <td>2</td>\n",
              "      <td>Good</td>\n",
              "      <td>...</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "      <td>500</td>\n",
              "      <td>300</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.121457</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Poland</td>\n",
              "      <td>Przasnysz</td>\n",
              "      <td>34</td>\n",
              "      <td>Good</td>\n",
              "      <td>1</td>\n",
              "      <td>Good</td>\n",
              "      <td>34</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>...</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "      <td>500</td>\n",
              "      <td>300</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.056680</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>France</td>\n",
              "      <td>Punaauia</td>\n",
              "      <td>22</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>22</td>\n",
              "      <td>Good</td>\n",
              "      <td>0</td>\n",
              "      <td>Good</td>\n",
              "      <td>...</td>\n",
              "      <td>Sample City</td>\n",
              "      <td>1234567</td>\n",
              "      <td>150</td>\n",
              "      <td>{'PM2.5': {'Value': 120, 'Category': 'Unhealth...</td>\n",
              "      <td>{'RespiratoryDiseases': 500, 'CardiovascularDi...</td>\n",
              "      <td>Region Name</td>\n",
              "      <td>500</td>\n",
              "      <td>300</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.032389</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abfa8788-6ec2-4aa5-a11c-67e4cdc90075')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-abfa8788-6ec2-4aa5-a11c-67e4cdc90075 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-abfa8788-6ec2-4aa5-a11c-67e4cdc90075');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-da3334ea-7e95-4e65-9f9f-305b12bf081a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da3334ea-7e95-4e65-9f9f-305b12bf081a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-da3334ea-7e95-4e65-9f9f-305b12bf081a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "pollution_health_combined"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: Top 10 Countries by Average AQI and Pollutants**\n",
        "\n",
        "### Purpose\n",
        "This visualization aims to display the top 10 countries with the highest average Air Quality Index (AQI) and its associated pollutants. The pollutants shown include:\n",
        "- **AQI Value**\n",
        "- **CO AQI Value**\n",
        "- **Ozone AQI Value**\n",
        "- **NO2 AQI Value**\n",
        "- **PM2.5 AQI Value**\n",
        "### Visualization Details\n",
        "- **Bar Plot**:\n",
        "   A bar plot was used to represent the average AQI values and pollutants for the top 10 countries. Multiple bars were plotted for each country, each representing one of the pollutants. The pollutants were differentiated by color:\n",
        "   - **AQI Value**: Light blue\n",
        "   - **CO AQI Value**: Orange\n",
        "   - **Ozone AQI Value**: Green\n",
        "   - **NO2 AQI Value**: Red\n",
        "   - **PM2.5 AQI Value**: Purple\n",
        "### Result\n",
        "This plot provides a visual representation of the countries with the highest AQI values and the corresponding pollutants, making it easier to compare air quality across these countries."
      ],
      "metadata": {
        "id": "NGH9zOTnMk2F"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Aggregating AQI and pollutants by country (average values)\n",
        "country_aggregates = pollution_health_combined.groupby('Country').agg({\n",
        "    'AQI Value': 'mean',\n",
        "    'CO AQI Value': 'mean',\n",
        "    'Ozone AQI Value': 'mean',\n",
        "    'NO2 AQI Value': 'mean',\n",
        "    'PM2.5 AQI Value': 'mean',\n",
        "    'Population': 'sum',  # Sum population for each country\n",
        "}).reset_index()\n",
        "\n",
        "# Sorting by AQI Value to get the top 10 countries with the highest AQI\n",
        "top_countries = country_aggregates.sort_values(by='AQI Value', ascending=False).head(10)\n",
        "\n",
        "# Seting figure size\n",
        "plt.figure(figsize=(14, 8))\n",
        "\n",
        "# Plotting each pollutant's average value by country\n",
        "sns.barplot(x='Country', y='AQI Value', data=top_countries, color='lightblue', label='AQI Value')\n",
        "sns.barplot(x='Country', y='CO AQI Value', data=top_countries, color='orange', label='CO AQI Value', alpha=0.6)\n",
        "sns.barplot(x='Country', y='Ozone AQI Value', data=top_countries, color='green', label='Ozone AQI Value', alpha=0.6)\n",
        "sns.barplot(x='Country', y='NO2 AQI Value', data=top_countries, color='red', label='NO2 AQI Value', alpha=0.6)\n",
        "sns.barplot(x='Country', y='PM2.5 AQI Value', data=top_countries, color='purple', label='PM2.5 AQI Value', alpha=0.6)\n",
        "\n",
        "# Title and labels\n",
        "plt.title('Top 10 Countries by Average AQI and Pollutants', fontsize=16)\n",
        "plt.xlabel('Country', fontsize=14)\n",
        "plt.ylabel('Average AQI/Pollutant Value', fontsize=14)\n",
        "\n",
        "# Rotating labels for better readability\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "\n",
        "# Adding legend\n",
        "plt.legend(title='Pollutants', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "# Adjusting layout to fit everything\n",
        "plt.tight_layout()\n",
        "\n",
        "# Showing plot\n",
        "plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "id": "AaCwvRTDMfjL",
        "outputId": "f02db97e-f707-49d8-e684-621e8b16f5ea"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: Top 10 Countries by Aggregated Health Impacts**\n",
        "\n",
        "### Purpose\n",
        "This visualization highlights the top 10 countries with the highest aggregated health impacts, including:\n",
        "- **Respiratory Diseases**\n",
        "- **Cardiovascular Diseases**\n",
        "- **Mortality Rate**\n",
        "### Result\n",
        "This plot provides a clear comparison of the top 10 countries facing the highest health impacts, helping to identify regions that may require increased attention in terms of healthcare intervention and resources."
      ],
      "metadata": {
        "id": "SWMj0meYNFVJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Aggregated health impacts by country (sum for diseases, mean for mortality rate)\n",
        "country_health_aggregates = pollution_health_combined.groupby('Country').agg({\n",
        "    'RespiratoryDiseases': 'sum',\n",
        "    'CardiovascularDiseases': 'sum',\n",
        "    'MortalityRate': 'mean',  # Mean mortality rate\n",
        "}).reset_index()\n",
        "\n",
        "# Sorting by Respiratory Diseases to get top 10 countries\n",
        "top_health_countries = country_health_aggregates.sort_values(by='RespiratoryDiseases', ascending=False).head(10)\n",
        "\n",
        "# Seting figure size\n",
        "plt.figure(figsize=(14, 8))\n",
        "\n",
        "# Plotting each health impact by country\n",
        "sns.barplot(x='Country', y='RespiratoryDiseases', data=top_health_countries, color='blue', label='Respiratory Diseases')\n",
        "sns.barplot(x='Country', y='CardiovascularDiseases', data=top_health_countries, color='red', label='Cardiovascular Diseases', alpha=0.6)\n",
        "sns.barplot(x='Country', y='MortalityRate', data=top_health_countries, color='green', label='Mortality Rate', alpha=0.6)\n",
        "\n",
        "# Title and labels\n",
        "plt.title('Top 10 Countries by Aggregated Health Impacts', fontsize=16)\n",
        "plt.xlabel('Country', fontsize=14)\n",
        "plt.ylabel('Health Impact Value', fontsize=14)\n",
        "\n",
        "# Rotating x-axis labels for better readability\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "\n",
        "# Adding legend\n",
        "plt.legend(title='Health Impacts', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "# Adjusting layout to fit everything\n",
        "plt.tight_layout()\n",
        "\n",
        "# Showign plot\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "id": "olImrPrDNBNS",
        "outputId": "78122f6d-feb7-4ff3-f63b-ee637ecbcafd"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: Distribution of AQI Categories**\n",
        "\n",
        "This visualization shows the distribution of different AQI (Air Quality Index) categories in the dataset. The categories are:\n",
        "- **Good**\n",
        "- **Moderate**\n",
        "- **Unhealthy**\n",
        "The data used in this visualization comes from the `AQI Category` column, which classifies each country or city based on its AQI value. The categories are derived from the AQI value itself:\n",
        "- **Good**: AQI value between 0-50\n",
        "- **Moderate**: AQI value between 51-100\n",
        "- **Unhealthy**: AQI value above 100\n",
        "This plot helps to quickly assess the distribution of air quality across different regions, indicating how many regions fall under each AQI category and providing insights into the overall air quality condition."
      ],
      "metadata": {
        "id": "mNGHDHjLNajq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "sns.countplot(x='AQI Category', data=pollution_health_combined, palette='coolwarm')\n",
        "plt.title('Distribution of AQI Categories')\n",
        "plt.xlabel('AQI Category')\n",
        "plt.ylabel('Count')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 671
        },
        "id": "b_hjGPtMNWS-",
        "outputId": "c719b955-69c9-45c7-e64c-17a3b97ec653"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-17-762ca04d26f8>:2: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.countplot(x='AQI Category', data=pollution_health_combined, palette='coolwarm')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: AQI Value vs Respiratory Diseases (Scatter Plot)**\n",
        "\n",
        "This scatter plot visualizes the relationship between the AQI (Air Quality Index) value and the number of respiratory diseases. The aim is to observe whether higher AQI values correlate with a higher number of respiratory diseases.\n",
        "\n",
        "### Data Processing\n",
        "The data used in this visualization comes from two columns:\n",
        "- **AQI Value**: The average air quality index value of each region.\n",
        "- **RespiratoryDiseases**: The number of cases of respiratory diseases, aggregated by country.\n",
        "\n",
        "### Visualization Details\n",
        "- **Scatter Plot**:\n",
        "   A scatter plot was chosen to visualize the relationship between AQI value and respiratory diseases. This plot helps identify any trends or correlations between the two variables.\n",
        "This visualization helps to assess whether poorer air quality (higher AQI values) is associated with an increase in respiratory diseases. It provides an insight into the potential health impacts of air pollution on respiratory health."
      ],
      "metadata": {
        "id": "3czOpQ_LNoXm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualization: AQI Value vs Respiratory Diseases (Scatter Plot)\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(x='AQI Value', y='RespiratoryDiseases', data=pollution_health_combined, color='blue')\n",
        "plt.title('AQI Value vs Respiratory Diseases')\n",
        "plt.xlabel('AQI Value')\n",
        "plt.ylabel('Respiratory Diseases')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "sMqUs_zbNjvw",
        "outputId": "79985c00-d377-4496-9650-706ebefc63c7"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: AQI Value vs Cardiovascular Diseases (Scatter Plot)**\n",
        "\n",
        "This scatter plot visualizes the relationship between AQI (Air Quality Index) value and the number of cardiovascular diseases. The goal is to examine whether higher AQI values are linked to a higher incidence of cardiovascular diseases.\n",
        "\n",
        "### Data Processing\n",
        "The data used in this visualization comes from two columns:\n",
        "- **AQI Value**: The average air quality index value for each region.\n",
        "- **CardiovascularDiseases**: The number of cases of cardiovascular diseases, aggregated by country.\n",
        "\n",
        "### Visualization Details\n",
        "- **Scatter Plot**:\n",
        "   A scatter plot was used to show the relationship between AQI values and cardiovascular diseases, helping to identify any potential correlation between the two variables.\n",
        "This visualization provides insights into whether poor air quality (indicated by higher AQI values) correlates with an increase in cardiovascular diseases. It helps in understanding the potential impacts of air pollution on heart health.\n"
      ],
      "metadata": {
        "id": "5dJCPTYKNvMt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualization: AQI Value vs Cardiovascular Diseases (Scatter Plot)\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(x='AQI Value', y='CardiovascularDiseases', data=pollution_health_combined, color='red')\n",
        "plt.title('AQI Value vs Cardiovascular Diseases')\n",
        "plt.xlabel('AQI Value')\n",
        "plt.ylabel('Cardiovascular Diseases')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "NBKDEOo-N2Sa",
        "outputId": "9a161ecf-ff5c-45e9-c3c0-05ea20e98739"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: Correlation Heatmap**\n",
        "\n",
        "This visualization provides a heatmap to explore the correlation between the AQI value, respiratory diseases, cardiovascular diseases, mortality rate, and normalized AQI. The heatmap helps to identify the strength and direction of the relationships between these variables.\n",
        "\n",
        "### Code Explanation:\n",
        "1. **Data Selection**: The correlation matrix is calculated for the following columns in the dataset: `'AQI Value'`, `'RespiratoryDiseases'`, `'CardiovascularDiseases'`, `'MortalityRate'`, and `'Normalized AQI'`.\n",
        "2. **Heatmap Creation**: I used Seaborn's `heatmap()` function to generate a visually appealing heatmap with annotations (`annot=True`) that display the correlation coefficients.\n",
        "3. **Color Map**: The `coolwarm` color palette is used to represent positive and negative correlations with different colors.\n",
        "4. **Display**: The `plt.show()` function renders the heatmap.\n",
        "\n",
        "The heatmap allows to identify any potential correlations between the air quality index (AQI) and health impacts like respiratory and cardiovascular diseases, and how mortality rate may relate to these factors. Strong positive or negative correlations can suggest areas for deeper investigation."
      ],
      "metadata": {
        "id": "juoPy3kzN560"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualization: Correlation Heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "corr_matrix = pollution_health_combined[['AQI Value', 'RespiratoryDiseases', 'CardiovascularDiseases', 'MortalityRate', 'Normalized AQI']].corr()\n",
        "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f', linewidths=1, square=True)\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 701
        },
        "id": "b0FPBOisOAWw",
        "outputId": "e0442501-ef3f-44ac-f8d3-8d816632fcfc"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: AQI Value by Country (Top 10)**\n",
        "\n",
        "This box plot visualizes the distribution of AQI values across the top 10 countries with the highest occurrence in the dataset. The box plot is useful for identifying outliers, variations, and the overall spread of AQI values in these countries.\n",
        "\n",
        "### Code Explanation:\n",
        "1. **Top 10 Countries**: The `value_counts()` function is used to find the top 10 countries with the highest number of occurrences in the dataset, and these countries are stored in `top_countries`.\n",
        "2. **Filtered Data**: The dataset is filtered to include only the top 10 countries using the `.isin()` method.\n",
        "3. **Box Plot Creation**: A box plot is created with Seaborn's `boxplot()` function, showing AQI values for each of the top 10 countries.\n",
        "4. **Styling**: The x-axis labels are rotated for better readability, and the layout is adjusted using `tight_layout()` to ensure the labels fit within the plot area.\n",
        "\n",
        "This box plot helps to visualize the variability in AQI values for each country, including identifying countries with extreme AQI values (outliers). It provides a clear comparison of the AQI range across the top 10 countries.\n"
      ],
      "metadata": {
        "id": "YXtfIR-LODu9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "top_countries = pollution_health_combined['Country'].value_counts().head(10).index\n",
        "filtered_data = pollution_health_combined[pollution_health_combined['Country'].isin(top_countries)]\n",
        "\n",
        "# AQI Value by Country (with top 10 countries)\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.boxplot(x='Country', y='AQI Value', data=filtered_data, palette='Set2')\n",
        "plt.title('AQI Value by Country (Top 10)', fontsize=16)\n",
        "plt.xlabel('Country', fontsize=14)\n",
        "plt.ylabel('AQI Value', fontsize=14)\n",
        "plt.xticks(rotation=45, ha='right')  # Rotating labels for better readability\n",
        "plt.tight_layout()  # Adjusting layout for better spacing\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 693
        },
        "id": "klDxJeydOKmr",
        "outputId": "13f70661-adc0-4a5c-9956-3d7c0ca1cebb"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-21-193a254a10c2>:6: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(x='Country', y='AQI Value', data=filtered_data, palette='Set2')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Visualization: Dangerous and Good Countries Based on AQI**\n",
        "\n",
        "This visualization aims to identify:\n",
        "1. The top 10 countries with the worst air quality (categorized as *Unhealthy*, *Very Unhealthy*, or *Hazardous*).\n",
        "2. The top 10 countries with the best air quality (categorized as *Good* or *Moderate*).\n",
        "\n",
        "By highlighting these extremes, the visualizations help in understanding which countries are most and least affected by air pollution.\n"
      ],
      "metadata": {
        "id": "COqzK_rfOR8P"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Categorizing AQI levels\n",
        "def categorize_aqi(aqi):\n",
        "    if aqi <= 50:\n",
        "        return 'Good'\n",
        "    elif aqi <= 100:\n",
        "        return 'Moderate'\n",
        "    elif aqi <= 150:\n",
        "        return 'Unhealthy for Sensitive Groups'\n",
        "    elif aqi <= 200:\n",
        "        return 'Unhealthy'\n",
        "    elif aqi <= 300:\n",
        "        return 'Very Unhealthy'\n",
        "    else:\n",
        "        return 'Hazardous'\n",
        "\n",
        "pollution_health_combined['AQI Category'] = pollution_health_combined['AQI Value'].apply(categorize_aqi)\n",
        "\n",
        "# Aggregating countries by AQI category\n",
        "country_aqi_aggregates = pollution_health_combined.groupby('Country').agg({\n",
        "    'AQI Value': 'mean',\n",
        "}).reset_index()\n",
        "\n",
        "# Filtering for dangerous countries (Unhealthy, Very Unhealthy, Hazardous)\n",
        "dangerous_countries = country_aqi_aggregates[country_aqi_aggregates['AQI Value'] > 150].sort_values(by='AQI Value', ascending=False).head(10)\n",
        "\n",
        "# Filtering for good countries (Good, Moderate)\n",
        "good_countries = country_aqi_aggregates[country_aqi_aggregates['AQI Value'] <= 100].sort_values(by='AQI Value').head(10)\n",
        "\n",
        "# Visualization for Top 10 Dangerous Countries\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.barplot(x='AQI Value', y='Country', data=dangerous_countries, palette='Reds')\n",
        "plt.title('Top 10 Dangerous Countries by AQI (Unhealthy, Very Unhealthy, Hazardous)', fontsize=16)\n",
        "plt.xlabel('Average AQI Value', fontsize=14)\n",
        "plt.ylabel('Country', fontsize=14)\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Visualization for Top 10 Good Countries to Live (AQI Good and Moderate)\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.barplot(x='AQI Value', y='Country', data=good_countries, palette='Blues')\n",
        "plt.title('Top 10 Best Countries to Live by AQI (Good and Moderate)', fontsize=16)\n",
        "plt.xlabel('Average AQI Value', fontsize=14)\n",
        "plt.ylabel('Country', fontsize=14)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "NBzciyIoON_N",
        "outputId": "9ca6dd75-a3a4-48cd-a14e-8b07d6db99b8"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-22-02dd046dea85>:34: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(x='AQI Value', y='Country', data=dangerous_countries, palette='Reds')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABKUAAAJOCAYAAABm7rQwAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAACbDklEQVR4nOzdeZyN9f//8eeZHbMawwyGse/7loihKbJly5ZlUCo7yVKENluIqFQYJKIiSQqh7Euh7ER8LJFlxjrGzPv3h9853zlmHzNnLI/77XZutznX+rqWuc51nue63pfFGGMEAAAAAAAAOJBTVhcAAAAAAACARw+hFAAAAAAAAByOUAoAAAAAAAAORygFAAAAAAAAhyOUAgAAAAAAgMMRSgEAAAAAAMDhCKUAAAAAAADgcIRSAAAAAAAAcDhCKQAAAAAAADgcoRQAOxaLJc2v0NDQrC5bkvT777/r/fffV/v27VW8eHE5OTnJYrHoiy++SNX4ixcvVmhoqPz8/JQjRw5VqFBB48ePV0xMTJprGTVqVIL15OHhody5c6tChQoKDw/X/PnzdfPmzTRPGw+W/fv3a+DAgapUqZL8/f3l6uoqf39/1axZU8OGDdP+/fuzusQstW7duvvqOBJfaGioLBaL1q1bl9Wl2Pn9999tx5VWrVqleryTJ09qyJAhqlSpkvz8/OTu7q78+fOrRYsWWrhwoYwxSY4bEhIii8WiiIiIdNU8YMAAOTk5aceOHemabnh4uCwWi8LDw9M1/7tFRERk6PQyi3X9HD9+PM3jWveR+9Evv/wii8WibNmy6fLlyykOf+7cObm5uclisWjbtm2ZX2AGOX78uG07pLQN7/V/7G7W/5mMml5msK6fkJCQNI97P392xGf9HBk1alSyw2X0Me5B8aBsx/hiY2NVsmRJFSxYUDdu3Mjqch4KLlldAID7S5cuXRJ0O3v2rH766ack+5csWTLT60qNt956S9999126xu3fv7+mTJkiFxcX1a9fX56envrll180ZMgQff/99/r555+VLVu2NE83T548atiwoaQ7H2KRkZE6cOCA5syZozlz5qh///768MMP1a5du3TVjfvX7du39dprr2nq1KmKi4tTzpw5Va1aNfn7++vy5cvauXOntmzZovHjx2vKlCnq3bt3VpecJuvWrVO9evVUt27d+y60edjNnDnT9vf333+v8+fPKyAgINlxpk+frldffVXR0dHy9/dX7dq15enpqaNHj+q7777T0qVLNWnSJC1dulR58+bN0Hr379+vadOmqVWrVqpatWqGTvtRFR4erjlz5mj27NkP5JfYevXqqVChQjp27Ji+/PJL9ezZM9nh582bp5iYGJUtW1bVq1d3UJXISiEhIfrnn3907NixdIVWQGZxdnbWO++8o+eee07jx4/XyJEjs7qkBx6hFAA7if2itm7dOlsodT//4vbYY4+pTJkyqly5sipVqqRu3bpp/fr1KY63dOlSTZkyRZ6enlq/fr0qV64sSfrvv/9Uv359bdiwQSNGjND777+f5ppKliyZ6Do7evSoRo0apS+++ELt27fXxYsXUzwpx4OlY8eO+uqrr+Tt7a0pU6aoU6dOcnZ2tvU3xmjVqlUaNmyYjhw5koWVZq3q1atr//79yp49e1aX8kC4efOmvvzyS0lSvnz5dOrUKc2bN08DBw5McpwpU6aof//+cnJy0tixYzVw4EC5urra+h84cEAdO3bU9u3b9cQTT2jnzp3y9fXNsJpfe+013b59O8UrBfDosFgs6tatm0aMGKFZs2al+Pk3e/ZsSVL37t0dUR4AJKt169YqV66cxo0bp5deekmBgYFZXdIDjdv3ADw0hg4dqnfffVetWrVS4cKFUz3ee++9ZxvfGkhJUq5cufTRRx9JkqZNm6bIyMgMq7VIkSKaN2+eXnvtNUlSv3799Pfff2fY9JG1Zs2apa+++kqurq76+eefFR4ebhdISXe+lD399NPasmWL2rZtm0WVZr3s2bOrZMmSKlCgQFaX8kD45ptvdPnyZZUuXVrvvvuuJPsrp+62b98+23Fm8uTJGjJkiF0gJd0Jz9esWaMiRYro77//Vt++fTOs3kOHDmnFihW2Hw0AK+txcefOnfrzzz+THG7btm3au3ev3Nzc1LFjRwdWCABJ69atm27cuKFPP/00q0t54BFKAbhn//vf/9SnTx8VK1ZMHh4e8vHxUa1atTRjxgzFxsYmGD5+Wx4XLlxQr169VKBAAbm7u6tgwYIaMGCALl265JDaT506pe3bt0uSOnTokKB/7dq1FRwcrOjoaK1YsSLD5//uu+8qb968un37tiZPnmzX78qVK/rss8/UsmVLFStWTDly5FCOHDlUrlw5vfHGG0m2wxG/DZK1a9fq6aef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SWpzpZr1/yVXrlwJ1pkxxly/ft22HX/88Udb9/QcG6z7SocOHUzOnDlNYGCgadWqlWnZsqV59dVXzc2bN01AQICxWCzm4MGDidb75ptvGkmma9euqVq+Y8eO2baDdRsmJan/BetxaOjQocbNzc2UKlXKtGvXztStW9c4OzsbSaZfv34Jpmf9n+nXr5/x9vY2BQsWNG3atDFhYWEmW7Zstv0/MR988IHtGFexYkXTunVrU7t2bePm5mYkmdGjRycYp3v37kaSKVmypGnQoIFp27atqVmzpm06AwYMSHL9FCxY0Nbtt99+M126dDE5cuQwkkyrVq3s9vH9+/cbY/7vs+Pxxx83YWFhJnv27KZhw4amVatWtn3D19c3wXovV66ckWR+/vnnRJd91qxZRpKpV69eov3Tyrr97v7svVtSxzhjjHF2djbZs2c3VatWNS1btjTNmjUzhQsXNpJMjhw5zMaNG+2Gt67DxF5hYWG2ffLEiRO2cdKz/azboEaNGqZatWomR44c5plnnjFt27Y1YWFhtuH69u1rO0esU6eOadeunSldurRxcnIy/fr1S/Ic4EE4B6xataqRZDZt2pRof6QOoRSAFCUVSt28edN2EvXyyy/bnVAePXrU9sXr7pNb65cBSeaxxx4zFy5csPW7dOmS7QOnXbt291R3akKpqVOn2k66kmL9MG3dunWq552WUOqLL76wrY+YmBhb95MnT5rVq1eb2NhYu+GvXbtmOnfubCSZnj17JpiedZu4urqa77//3q6fdd37+PiY69ev2/Wzhm+hoaEmMjLS1v3SpUumdu3athrvPmH+9NNPbSHZ7t277fqtX7/eeHl5GTc3N3Po0CG7ftbpeXt7m82bNydYjj179hgXFxdjsVjM3Llz7fqtWLHCdnJ894llek5I/vnnHyPJ5M+f35w5cybBOPv27TP//PNPotO728yZM40k4+bmZrc9U8uRyx2/uyQTHh5u98X4xIkTJl++fEaS+fLLL+3GSy5MsrKeZFu/UN29Lyc3nevXr9u+eA8fPtwu3L527Zpp3759gi+HGbkdjfm/dSrJvPfee3b91q1bZ/tit3LlSlv327dv2/4Hf//99wTTtAbh5cuXT3UdVq+//nqCL5KbN282koyXl5e5evWq3fBHjx611Z/aAKxevXqJfjFKTyh15MgRI90J1pOSUaFUWvff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Y8eOmjZtmipUqKD58+fLxcXFduVUauXMmVOenp66evWqjhw5kugxXbpzZe3FixclZe0+bv1Mt1gsmjVrVqq39ffff68bN26oRYsWGjduXIL+9+M+3rdvXy1atEjTp09Xx44d9cknn0jKutszk2I9R5wxY4aaNWuWoH9y6/b7779Xnz595OXlpR9++CHRkNY6XGZsP39/f7m7uys6OlrHjx9XmTJlEgyT1Hnng3IOaP18SykgR/JoUwpAulnbFfjqq68SvWx8yZIlunTpkry8vBJtb2jPnj3as2dPgu579+7V77//LicnpxR/2b9X+fPnV7Vq1STdaS/jbhs2bNDJkyfl7u6uRo0aZfj833jjDZ0+fVqurq4aMGCArXtkZKRiY2Pl7e2dIJCSpC+++CJDf3F84oknZLFYtHPnTh06dChB/3379iW4dU+SqlWrply5cmnfvn3J3paSHtb9K6mwa9asWZLu1B7/S541YNu/f3+Cca5fv661a9emuobg4GCNHj1akrRr165UjWOxWPT6669LuvML5bZt25Id/vbt29qyZYvt/f2w3KlhPfGzhiUZzdpukvWE/F6kZzvG98UXXyTafe7cuZKk2rVrJwgaJPu2ee7l1ifrrXsff/yxzJ2H1CR43b59W0FBQTp79qxWrFhhG/e1116Ti4uL/vzzT02dOjXJeURGRmrw4MGS7vzyntbgLDHWQDaxfdKqfv36ku4EYkntSwcPHtSff/5pN3xWSc9+aQ0b8ubNm+h+ktT+lZzM/v/LkSOHunfvrps3b+q9997T119/LQ8PjwRXLWUUT09PtWvXTtKdY5z1ONehQwfbFSFWGXlsSEqbNm0UFBSkpUuX6t1339W1a9fUokUL5c2bN03TcXJyUt26dSXJ1i5PYr7++mtJd662SKytTUfJmzevypcvrytXrmjlypWpHs+6jycWehhjEj2/Sklm7+O1atVSlSpVtH37dg0fPlwnTpxQtWrVVL169UyZX3olt2737t2b5Gfa9u3b1a5dO1ksFi1evDjZq18zY/tJkouLi2rVqiVJmj9/fqLD3N12m9X9cC6UmnOHv/76S5KSbFcVqUMoBSDdnnvuORUoUECnT5/WwIED7U4cjh07pldffVWS1KdPnwQnldKdD7pXXnnF7j7syMhIvfLKKzLGqFWrVrZf7TKTNUAYO3as7dYV6c6v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2muaOHGitm/froCAADVt2lQxMTFpmv+aNWu0f/9+rVu3TgsWLNC3336r0aNHp2rcuLg4PfPMM9q4caO++OIL7du3T2PHjpWzs3OSwz/77LO6ePGi1q9fr1WrVunvv/9W27ZtJUlt27bV6tWrJUnbtm3TmTNnFBwcnOT8z549q7p160qS1q9fr8DAQFu/8PBw7dixQ8uWLdPmzZtljFGjRo3s1s/169c1btw4ff7559q7d69y586t3r17a/PmzVq4cKH27Nmj5557Tg0bNrQFWjdv3lSVKlX0ww8/6K+//lKPHj3UqVMnbdu2Lck6o6OjFRUVZfcCAAAAAACO98jfvrd8+XJ5enrq9u3bio6OlpOTk6ZNmybpToDx3nvvafXq1apZs6akO1cNbdiwQTNmzLCFMJI0cuRIPfXUU5KkOXPmKH/+/FqyZInatGmT6lrc3Nw0a9YsZc+eXWXKlNFbb72l1157TW+//XaKt7KtXr1a27Zt0/79+1W8eHFbrUlZs2aN/vzzTx07dswWNs2dO1dlypTR9u3bVa1aNfn7+0u6c5tg/JApMf369VPhwoW1atUqZc+e3db98OHDWrZsmTZu3KjHH39ckjR//nwFBwdr6dKleu655yTdaYfqo48+UoUKFSTduYpr9uzZOnHihPLmzStJGjRokFauXKnZs2frvffeU758+TRo0CDbvPr06aOffvpJixYtUvXq1ROtc8yYMakO+gAAAAAAQOZ55EOpevXq6eOPP9a1a9c0efJkubi4qFWrVpKkI0eO6Pr167awyerWrVuqVKmSXTdraCVJOXPmVIkSJbR///401VKhQgW7QKdmzZq6evWqTp48qYIFCyY77q5du5Q/f35bIJWS/fv3Kzg42O7qp9KlS8vX11f79+9XtWrV0lR7kyZNtHTpUs2YMUMDBgywm4+Li4tq1Khh6+bv759g/bi5ual8+fK293/++adiY2MTLE90dLQtLIuNjdV7772nRYsW6dSpU7p165aio6Pt1uHdhg0bpoEDB9reR0VFJXsFGAAAAAAAyByPfCiVI0cOFS1aVJI0a9YsVahQQTNnzlT37t119epVSdIPP/ygfPny2Y3n7u6e6nk4OTnJGGPXLa239qUkW7ZsGTq9tOrUqZOaNWumbt26yRhjF/ykRrZs2WSxWGzvr169KmdnZ+3cuTPBLYienp6S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X8HBwbZASpJq1qyZ4nQPHjyobdu2qX379pLu3DbXtm1bzZw5M8GwVatWtXt/9epVDRo0SKVKlZKvr688PT21f//+BFdK3V1HzZo1tX///mTrKlGihHbt2mX3euutt+yGKV++vO3vPHnySJLKlSuXoFty67pgwYJ2gZR05zbI9u3bq3DhwvL29rZdzXT3csV37do1HT16VN27d7fbRu+8847t1r/w8HDt2rVLJUqUUN++ffXzzz8nOb1hw4YpMjLS9jp58mSSwwIAAAAAgMyT7iultm7dqsceeywja5EkeXt7KzIyMkH3y5cvy8fHx66bq6ur3XuLxWK7FSy1rl69qtGjR9uuwokvuVsRUzJz5kzdvn3bLswyxsjd3V3Tpk2zW5YcOXLYjTto0CCtWrVK77//vooWLaps2bKpdevWGdJguJubm4oWLZrsMPHXq8ViSbJbcuv67mWSpKZNm6pgwYL67LPPlDdvXsXFxals2bLJLtfVq1cl3bkyr0aNGnb9rIFk5cqVdezYMf34449avXq12rRpo7CwMH399dcJpufu7i53d/ck5wcAAAAAABwj3aFUyZIl9c8//2RkLZLuXMmT2JUuv//+u4oXL35P03Z1dVVsbKxdt8qVK+vgwYNJBjWlSpXSyZMndebMGQUFBUmStmzZkux8bt++rblz52rixIl6+umn7fo1b95cCxYs0Msvv5zk+Bs3blR4eLhatGgh6U4wc/z48QTD3V3Hli1bEjQwf7+4cOGCDh48qM8++0xPPPGEJCV46p+bm5sk2W2jPHnyKG/evPr777/1/PPPJzl9b29vtW3bVm3btlXr1q3VsGFDXbx4UTlz5syEpQEAAAAAAPcq3aFUnz591Lt3b+3bt0+lS5fOsIJeeeUVTZs2TX379tULL7wgd3d3/fDDD1qwYIG+//77e5p2SEiI1qxZo1q1asnd3V1+fn5688031aRJExUoUECtW7eWk5OTdu/erb/++kvvvPOOwsLCVLx4cXXp0kUTJkxQVFSU3njjjWTns3z5cl26dEndu3dPcHVXq1atNHPmzGRDqWLFiunbb79V06ZNZbFYNGLEiESvStq4caPGjx+v5s2ba9WqVVq8eLF++OGHZGu7ffu2zp49a9fNYrHYbsnLLH5+fvL399enn36qoKAgnThxwtYellXu3LmVLVs2rVy5Uvnz55eH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JkyYgNOnT2PmzJn49ddfER8fj9jYWAB3V10BgIeHB3bt2oWDBw/i1KlTmDBhAq5cufJYPhciIiIiIiIiery4UqqBs7a2hp+fH/773/8iMzMTt2/fRvPmzTF+/HjMnj0bKpUK27dvx5w5czBmzBhcvXoVzs7O6NmzJ5ycnGp8nH/9619o1qwZoqOjcf78edjb28PHxwezZ88GALRq1QobNmzA9OnTsWjRIqjVasyZMwcTJ05UVja99dZbOH/+PIKCgmBpaYmIiAgMGjQIhYWFj+WzISIiIiIiIqLHRyUiYuggiHSZP38+li5dikuXLj22YxQVFcHOzg5zXFvC3IgLB4mIHsVblzIfPoiIiIiI/vYq/9YuLCyEra1tteO4UorqjM8++wzdunVD06ZNceDAASxcuBBRUVGGDouIiIiIiIiIHgMWpajOOHv2LP7973/j+vXraNGiBaZPn45Zs2YZOiwiIiIiIiIiegx4+R41aLx8j4io9vDyPSIiIiICan75Hv8KJyIiIiIiIiIivWNRioiIiIiIiIiI9I5FKSIiIiIiIiIi0jsWpYiIiIiIiIiISO9YlCIiIiIiIiIiIr1jUYqIiIiIiIiIiPSORSkiIiIiIiIiItI7FqWIiIiIiIiIiEjvWJQiIiIiIiIiIiK9Y1GKiIiIiIiIiIj0jkUpIiIiIiIiIiLSO2NDB0BUF/zz1M+wtbU1dBhEREREREREDQZXShERERERERERkd6xKEVERERERERERHrHohQREREREREREekd7ylFDZqIAACKiooMHAkRERERERHR30Pl39iVf3NXh0UpatDy8/MBAM2bNzdwJERERERERER/L8XFxbCzs6u2n0UpatCaNGkCAMjOzn7gRKG6qaioCM2bN8elS5f49MR6hrmr35i/+o35q7+Yu/qN+au/mLv6jfkzDBFBcXExXF1dHziORSlq0IyM7t5Wzc7Ojl9Q9ZitrS3zV08xd/Ub81e/MX/1F3NXvzF/9RdzV78xf/pXk4UfvNE5ERERERERERHpHYtSRERERERERESkdyxKUYNmZmaGefPmwczMzNCh0F/A/NVfzF39xvzVb8xf/cXc1W/MX/3F3NVvzF/dppKHPZ+PiIiIiIiIiIiolnGlFBERERERERER6R2LUkREREREREREpHcsShERERERERERkd6xKEUN2pIlS9Cy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e/VQZe504byrWwICAnD8+HEcO3ZM+enatStCQ0OV15x/9YSh77ROZCjr1q0TMzMziY2NlZMnT0pERITY29trPX2BDG/69Omyf/9+ycrKkgMHDkhgYKA4ODhIXl6eiIi8+uqr0qJFC9m7d68cOXJE1Gq1qNVqA0fdcBUXF8vRo0fl6NGjAkA++ugjOXr0qFy8eFFERBYsWCD29vayadMmycjIkODgYGnVqpXcvHlT2Uf//v2lc+fOkpaWJsnJyeLh4SEjRoww1Ck1GA/KXXFxscyYMUNSUlIkKytLdu/eLT4+PuLh4SG3bt1S9sHcGcbEiRPFzs5O9u/fLzk5OcpPaWmpMuZh35UVFRXSsWNH6devnxw7dky+++47adasmcyaNcsQp9SgPCx/586dk/fee0+OHDkiWVlZsmnTJmndurX07NlT2QfzZzhvvvmmJCUlSVZWlmRkZMibb74pKpVKdu7cKSKce3XZg3LHeVc/3f/ERM6/+oFFKWrQFi9eLC1atBBTU1Px9fWV1NRUQ4dE9xk+fLi4uLiIqampuLm5yfDhw+XcuXNK/82bN2XSpEnSuHFjsbS0lMGDB0tOTo4BI27Y9u3bJwCq/IwePVpERDQajbz99tvi5OQkZmZmEhAQIGfOnNHaR35+vowYMUKsra3F1tZWxowZI8XFxQY4m4blQbkrLS2Vfv36SbNmzcTExETc3d1l/PjxVYr4zJ1h6MobAFm5cqUypibflRcuXJDnn39eLCwsxMHBQaZPny63b9/W89k0PA/LX3Z2tvTs2VOaNGkiZmZm8uSTT8obb7whhYWFWvth/gxj7Nix4u7uLqamptKsWTMJCAhQClIinHt12YNyx3lXP91flOL8qx9UIiL6W5dFRERERERERETEe0oREREREREREZEBsChFRERERERERER6x6IUERERERERERHpHYtSRERERERERESkdyxKERERERERERGR3rEoRUREREREREREeseiFBERERERERER6R2LUkREREREREREpHcsShERERER1WG9evWCSqUydBhERES1jkUpIiIiosdg7NixUKlUaNq0KcrKygwdzt/GDz/8AJVKBZVKhfXr1z90fG5uLmbOnAlvb2/Y2NjA0tISnp6emDx5MrKysnRuExsbC5VKhQULFjxw34WFhbC0tETjxo1x69atB4794osvoFKp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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-22-02dd046dea85>:43: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(x='AQI Value', y='Country', data=good_countries, palette='Blues')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**CONCLUSION**\n",
        "\n",
        "This project successfully analyzed the relationship between air pollution and its health impacts by integrating and processing two datasets: global air pollution data and health statistics. Key steps included data cleaning, feature engineering, and exploratory analysis to uncover trends. I have visualized top dangerous and safe countries based on AQI values and highlighted how air pollution correlates with respiratory and cardiovascular diseases. Insights from this project can help policymakers address pollution-related health challenges and guide environmental strategies."
      ],
      "metadata": {
        "id": "dKXnFXtaOcst"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "lixAef6eOk4d"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colab",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}